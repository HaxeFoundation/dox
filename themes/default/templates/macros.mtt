<macro name="printTypeParams(params)">
	::if params.length > 0::
		&lt;
		::foreach param params::
			<span class="type">::param::</span>
			::if !repeat.param.last::, ::end::
		::end::
		&gt;
	::end::
</macro>

<macro name="printPlatforms(platforms)">
	<p class="availability">
		Available on
		::if platforms.length == api.config.platforms.length:: all platforms
		::elseif platforms.length > 1:: ::platforms.join(", ")::
		::else:: ::platforms.join("")::
		::end::
	</p>
</macro>

<macro name="printLinkedPath(path, params)">
	::if api.isKnownType(path)::
		<a class="type" ::attr href api.pathToUrl(path)::>::api.getPathName(path)::</a>
	::else::
		<span class="type">::api.getPathName(path)::</span>
	::end::
	::if params.length > 0::
		&lt;
		::foreach param params::
			$$printLinkedType(::param::)
			::if !repeat.param.last::, ::end::
		::end::
		&gt;
	::end::
</macro>

<macro name="printLinkedType(ctype)">
	::switch ctype::
	::case::Unknown
	::case::$$printLinkedPath(::args[0]::,::args[1]::)
	::case::$$printLinkedPath(::args[0]::,::args[1]::)
	::case::$$printLinkedPath(::args[0]::,::args[1]::)
	::case::
		::foreach arg args[0]::
			$$printLinkedType(::arg.t::) -&gt;
		::end::
		$$printLinkedType(::args[1]::)
	::case::
	{
		::foreach field args[0]::
			::field.name:::$$printLinkedType(::field.type::)
			::if !repeat.field.last::, ::end::
		::end::
	}
	::case::$$printLinkedPath(::"Dynamic"::,::null::)::if args[0] != null::$$printLinkedType(::args[0]::)::end::
	::case::$$printLinkedPath(::args[0]::,::args[1]::)
	::end::
</macro>

<macro name="printModule(module)">
	<p ::cond module != null && module != "StdTypes"::>
		<code class="dark">
			<span class="directive">import</span> <span class="type">::module::</span>;
		</code>
	</p>
</macro>

<macro name="printFieldSignature(field, isStatic)">
	::if isStatic::
		<span class="keyword">static </span>
	::end::
	::switch field.type::
		<span class="keyword">var</span> <a href="#::field.name::"><span class="identifier">::field.name::</span></a>:$$printLinkedType(::field.type::)
	::case 4::
		<span class="keyword">function</span> <a href="#::field.name::"><span class="identifier">::field.name::</span></a>
		$$printTypeParams(::field.params::)
		(
		::foreach arg args[0]::
			::if arg.opt::?::end::
			::arg.name:::$$printLinkedType(::arg.t::)
			::if !repeat.arg.last::, ::end::
		::end::
		)
		:$$printLinkedType(::args[1]::)
	::end::
</macro>